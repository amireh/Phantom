CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

IF(DEFINED CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ELSE()
  SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ENDIF()

INCLUDE (CheckIncludeFileCXX)
INCLUDE (CMakeDependentOption)

PROJECT(PixyNet)

SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/CMake ${CMAKE_SOURCE_DIR}/CMake/Packages )

FIND_PACKAGE(PkgConfig)

FIND_PACKAGE(Boost 1.46 COMPONENTS filesystem thread date_time regex system REQUIRED)
FIND_PACKAGE(EShared REQUIRED)
FIND_PACKAGE(PostgreSQL REQUIRED)
FIND_PACKAGE(Lua51 REQUIRED)

#~ ADD_DEFINITIONS("-Wall -pedantic")

# project version
SET( ${PROJECT_NAME}_MAJOR_VERSION 0 )
SET( ${PROJECT_NAME}_MINOR_VERSION 1 )
SET( ${PROJECT_NAME}_BUILD_LEVEL 0 )

INCLUDE_DIRECTORIES(
  ${CMAKE_SOURCE_DIR} include
  ${Boost_INCLUDE_DIRS}
  ${ESHARED_INCLUDE_DIRS}
  ${LUA_INCLUDE_DIR}
  ${PostgreSQL_INCLUDE_DIRS})

ADD_DEFINITIONS("-std=c++0x")
#SET(PROJECT_LIBS ${Boost_LIBRARIES})

#LINK_DIRECTORIES()
LINK_LIBRARIES( ${Boost_LIBRARIES} ${ESHARED_LIBRARIES} ${LUA_LIBRARIES} pqxx tolua++)
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin")

ADD_SUBDIRECTORY(src)
